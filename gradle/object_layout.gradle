/**
 * Java object layout: http://openjdk.java.net/projects/code-tools/jol
 */
configurations {
  objectLayout
}

dependencies {
  objectLayout benchmark_libraries.java_object_layout
}

task footprint(type: JavaExec,
    description: 'Estimate the footprint of all objects reachable from a given instance')
task externals(type: JavaExec, description: 'Shows objects reachable from a given instance')
task estimates(type: JavaExec, description: 'Simulate the class layout in different VM modes')
task internals(type: JavaExec, description: 'Show the field layout, default contents, and header')

task packing(type: JavaExec, group: 'Object Layout',
    description: 'Compute the object footprint under different field layout strategies') {
  it.dependsOn(jar)
  main 'org.openjdk.jol.Main'
  args it.name, jar.archivePath
  it.classpath configurations.objectLayout
}

[footprint, externals, estimates, internals]*.with {
  group 'Object Layout'
  dependsOn(compileJava)
  main 'org.openjdk.jol.Main'
  classpath configurations.objectLayout, sourceSets.main.runtimeClasspath
  doFirst {
    if (!project.hasProperty('className')) {
      throw new GradleException("Usage: $it.name " +
          "-PclassName=com.nuaavee.skybridge.[CLASS_NAME]")
    }
    args it.name, 'com.nuaavee.skybridge.' + className
  }
}
